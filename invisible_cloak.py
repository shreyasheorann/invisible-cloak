# -*- coding: utf-8 -*-
"""invisible cloak

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1goXKIZJSrmb2x0Oj25ZwSzXVwejkfa57
"""

import numpy as np
import cv2
import time 


#RECORDING AND CATCHING THE BACKGROUND FOR EACH FRAME

##reading from the webcam
cap = cv2.VideoCapture(0)
#allow the system to sleep for 2s before the webcam starts
time.sleep(2)
background = 0

##capture the background in range of 60
for i in range(30):
  ret,background = cap.read()
background = np.flip(background, axis=1) #flipping the frame we are reading
 

#READING FROM VIDEO
while (cap.isOpened()):
  ret, img = cap.read()
  if not ret:
    break

  #CONVERTING THE IMAGE- BGR TO HSV
  hsv = cv2.cvtcolor(img, cv2.COLOR_BGR2HSV) 
  ##setting lower_red and upper_red values for mask1 and mask22
  lower_red = np.array([100,40,40])
  upper_red = np.array([100,255,255])
  mask1 = cv2.inRange(hsv, lower_red, upper_red)

  lower_red = np.array([155,40,40])
  upper_red = np.array([180,255,255])
  mask2 = cv2.inRange(hsv, lower_red, upper_red)

  mask1 = mask1 + mask2 

#SEGMENTING THE MASK PART FROM FRAMES
  mask1 = cv2.morphologyEx(mask1, cv2.MORPH_OPEN, np.ones((3,3), np.uint8), iterations=2)
  mask1 = cv2.morphologyEx(mask1, cv2.MORPH_DILATE, np.ones((3,3), np.uint8), iterations=1)

  mask2 = cv2.bitwise_not(mask1) #except the cloak

  res1 = cv2.bitwise_and(background, background, mask=mask1) #used for segmentation of color
  res2 = cv2_bitwise_and(img, img, mask=mask2) #used to substitute the cloak part
  final_output = cv2.addWeighted(res1, 1, res2, 1, 0)

  cv2.imshow('eureka !!', final_output)
  k = cv2.waitKey(10)
  if k==27;
    break
cap.release()
cv2.destroyAllWindows()